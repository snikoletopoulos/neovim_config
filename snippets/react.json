{
  "react component template": {
    "prefix": "rc",
    "body": [
      "export const ${1:$TM_FILENAME_BASE} = () => {",
      "  return <div>$2</div>",
      "}"
    ],
    "description": "react component template"
  },
  "react component template export": {
    "prefix": "rce",
    "body": [
      "const ${1:$TM_FILENAME_BASE} = () => {",
      "  return <div>${2}</div>",
      "}",
      "",
      "export default $1"
    ],
    "description": "react component template export"
  },
  "typescript react component template": {
    "prefix": "tsrc",
    "body": [
      "interface Props {}",
      "",
      "export const ${1:$TM_FILENAME_BASE} = (props: Props) => {",
      "  return <div>$2</div>",
      "}"
    ],
    "description": "typescript react component template"
  },
  "typescript react component template export": {
    "prefix": "tsrce",
    "body": [
      "interface Props {}",
      "",
      "const ${1:$TM_FILENAME_BASE} = (props: Props) => {",
      "  return <div>$2</div>",
      "}",
      "",
      "export default $1"
    ],
    "description": "react component template export"
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "$1", "}, [$2]);"],
    "description": "React useEffect() hook"
  },
  "useContext": {
    "prefix": "uc",
    "body": ["const $1 = useContext($2);"],
    "description": "React useContext() hook"
  },
  "useCallback": {
    "prefix": "ucb",
    "body": [
      "const ${1:memoizedCallback} = useCallback(",
      "() => {",
      "$2",
      "},",
      "[$3],",
      ");"
    ],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "um",
    "body": ["const ${1:memoizedValue} = useMemo(() => $2, [$3]);"],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "ur",
    "body": ["const $1 = useRef($2);"],
    "description": "React useRef() hook"
  }
}
